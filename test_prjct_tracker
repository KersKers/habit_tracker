from datetime import datetime, timedelta
from habit import Habit
from db import get_db, add_habit, check_habit

db = get_db()

# Adding habits
add_habit(db, "waterPlants", "Track weekly", "Weekly")
add_habit(db, "eatVegFruit", "Track daily", "Daily")
add_habit(db, "GetFitDailyTraining", "Track daily", "Daily")
add_habit(db, "chargePhone", "Track daily", "Daily")
add_habit(db, "CigarettesSmoked", "Track daily", "Daily")

# Simulate checking off habits for one month
check_habit(db, "waterPlants", (datetime.now() - timedelta(days=10)).strftime("2024-01-01"))
check_habit(db, "eatVegFruit", (datetime.now() - timedelta(days=1)).strftime("2024-01-10"))
check_habit(db, "GetFitDailyTraining", (datetime.now() - timedelta(days=29)).strftime("2024-01-01"))
check_habit(db, "chargePhone", (datetime.now() - timedelta(days=29)).strftime("2024-01-01"))
check_habit(db, "CigarettesSmoked", (datetime.now() - timedelta(days=25)).strftime("2024-01-01"))

# Analyze habits
print("\n--- Analyzing Habits ---")
show_all_habit(db)
get_habit_with_periodicity(db, "Weekly")
get_longest_streak(db, "waterPlants")
get_longest_streak_all(db)

tracked_data = {
    "waterPlants": {"2024-01-20": True},
    "eatVegFruit": {"2024-01-30": True},
    "GetFitDailyTraining": {"2024-02-01": True},
    "chargePhone": {"2024-02-01": True},
    "CigarettesSmoked": {"2024-02-05": True}
    }

# Function to save tracked data to a JSON file
def save_tracked_data_to_json(data, filename="tracked_data.json"):
    with open(filename, "w") as json_file:
        json.dump(data, json_file, indent=2)


# Function to load tracked data from a JSON file
def load_tracked_data_from_json(filename="tracked_data.json"):
    try:
        with open(filename, "r") as json_file:
            data = json.load(json_file)
        return data
    except FileNotFoundError:
        return {}


# Saves tracked data to a JSON file
save_tracked_data_to_json(tracked_data)

# Loads tracked data from the JSON file
loaded_data = load_tracked_data_from_json()

# Prints the loaded data
print("Loaded Tracked Data:")
print(loaded_data)

# This part was generated by Chat GBT, I was running out of time.
# As this is probably not entirely ok, i did learn a lot from this process.
